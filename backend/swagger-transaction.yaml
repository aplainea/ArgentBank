openapi: 3.1.0
info:
    title: Bank Argent API documentation
    description: Contains all available API endpoints in this codebase
    version: "1.0.0"
    termsOfService: "http://swagger.io/terms/"
servers:
    - url: http://localhost:3001/api/v2
paths:
    /user/login:
        post:
            tags:
                - User Module
            summary: Login
            description: API for Login
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Login"
            responses:
                "200":
                    description: Login Successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/LoginResponse"
                "400":
                    description: Invalid Fields
                "500":
                    description: Internal Server Error
    /user/signup:
        post:
            tags:
                - User Module
            summary: Signup
            description: API for Signup
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/User"
            responses:
                "200":
                    description: Signup Successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ApiResponse"
                "400":
                    description: Invalid Fields
                "500":
                    description: Internal Server Error
    /user/profile:
        post:
            tags:
                - User Module
            summary: User Profile API
            description: API for fetching a user profile
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserProfile"
            security:
                - Bearer: []
            responses:
                "200":
                    description: User profile retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ApiResponse"
                "400":
                    description: Invalid Fields
                "500":
                    description: Internal Server Error
        put:
            tags:
                - User Module
            summary: User Profile API
            description: API for updating a user profile
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserProfile"
            security:
                - Bearer: []
            responses:
                "200":
                    description: User profile retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ApiResponse"
                "400":
                    description: Invalid Fields
                "500":
                    description: Internal Server Error
    /user/accounts:
        get:
            tags:
                - User Module
            summary: User Accounts API
            description: API to get all user accounts
            security:
                - Bearer: []
            responses:
                "200":
                    description: Successfully retrieved accounts
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AccountResponse"
                "400":
                    description: Bad Request - Invalid parameters or request
                    $ref: "#/components/responses/BadRequestError"
                "401":
                    description: Unauthorized - Access token is missing or invalid
                    $ref: "#/components/responses/UnauthorizedError"
                "404":
                    description: Not Found - Resource not found
                    $ref: "#/components/responses/NotFoundError"
                "500":
                    description: Internal Server Error - Something went wrong on the server
                    $ref: "#/components/responses/InternalServerError"
    /user/accounts/{accountID}/transactions:
        get:
            tags:
                - User Module
            summary: User Accounts Transactions API
            description: API to get all transactions for a user account
            security:
                - Bearer: []
            parameters:
                - $ref: "#/components/parameters/securityHeader"
                - $ref: "#/components/parameters/accountID"
            responses:
                "200":
                    description: Successfully retrieved transactions
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TransactionsResponse"
                "400":
                    description: Bad Request - Invalid parameters or request
                    $ref: "#/components/responses/BadRequestError"
                "401":
                    description: Unauthorized - Access token is missing or invalid
                    $ref: "#/components/responses/UnauthorizedError"
                "404":
                    description: Not Found - Resource not found
                    $ref: "#/components/responses/NotFoundError"
                "500":
                    description: Internal Server Error - Something went wrong on the server
                    $ref: "#/components/responses/InternalServerError"
    /user/accounts/{accountID}/transactions/{transactionID}:
        patch:
            tags:
                - User Module
            summary: User Account Transaction API
            description: API to add or update a note or a category on a user account transaction.
            security:
                - Bearer: []
            parameters:
                - $ref: "#/components/parameters/securityHeader"
                - $ref: "#/components/parameters/accountID"
                - $ref: "#/components/parameters/transactionID"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                category:
                                    $ref: "#/components/schemas/TransactionCategory"
                                note:
                                    type: string
                                    nullable: true
            responses:
                "200":
                    description: Successfully updated the transaction details
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TransactionResponse"
                "400":
                    description: Bad Request - Invalid parameters or request
                    $ref: "#/components/responses/BadRequestError"
                "401":
                    description: Unauthorized - Access token is missing or invalid
                    $ref: "#/components/responses/UnauthorizedError"
                "404":
                    description: Not Found - Resource not found
                    $ref: "#/components/responses/NotFoundError"
                "500":
                    description: Internal Server Error - Something went wrong on the server
                    $ref: "#/components/responses/InternalServerError"
components:
    securitySchemes:
        Bearer:
            type: apiKey
            name: Authorization
            in: header
    schemas:
        User:
            type: object
            properties:
                email:
                    type: string
                    description: user email
                password:
                    type: string
                    description: user password
                firstName:
                    type: string
                    description: user first name
                lastName:
                    type: string
                    description: user last name
        Login:
            type: object
            properties:
                email:
                    type: string
                    description: user email
                password:
                    type: string
                    description: user password
        ApiResponse:
            type: object
            properties:
                status:
                    type: integer
                message:
                    type: string
                body:
                    type: object
                    properties:
                        id:
                            type: string
                        email:
                            type: string
        LoginResponse:
            type: object
            properties:
                token:
                    type: string
        UserProfile:
            type: object
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
        AccountResponse:
            type: object
            properties:
                status:
                    type: integer
                message:
                    type: string
                body:
                    type: array
                    items:
                        $ref: "#/components/schemas/Account"
        Account:
            type: object
            properties:
                type:
                    type: string
                    enum:
                        - Checking
                        - Savings
                        - Credit Card
                identifier:
                    type: string
                    pattern: '^x\d{4}$'
                description:
                    type: string
                    enum:
                        - Available Balance
                        - Current Balance
                balance:
                    $ref: "#/components/schemas/MonetaryValue"
            required:
                - type
                - identifier
                - description
                - balance
        MonetaryValue:
            type: string
            pattern: '^[0-9]*\.[0-9]{2}$'
            description: Monetary value to exactly two decimal places
        TransactionsResponse:
            type: object
            properties:
                status:
                    type: integer
                message:
                    type: string
                body:
                    type: array
                    items:
                        $ref: "#/components/schemas/Transaction"
        Transaction:
            type: object
            description: A unique transaction
            properties:
                id:
                    type: string
                date:
                    type: string
                    format: date-time
                    description: Complete date (mm dd, YYYY)
                description:
                    type: string
                amount:
                    $ref: "#/components/schemas/MonetaryValue"
                balance:
                    $ref: "#/components/schemas/MonetaryValue"
                type:
                    type: string
                category:
                    type: string
                notes:
                    type: string
            required:
                - id
                - date
                - description
                - amount
                - balance
                - type
